RDS : Relational Database Service : 6 Relational db engines.
--> Amazon Aurora	(Mysql COmpatable / postgresql Compatable)
--> MySQL
--> MS SQL
--> PostgreSQL
--> MariaDB
--> Oracle

NoSQL database : IN AWS DynamoDB is a Serverless architecture.
--> DynamoDB : 

Caching solution for DynamoDB : DAX (DynamoDB Accelerator)
Caching for RDS : Elasticache (2 Open SOurce caching engines)
	--> MemcacheD
	--> Redis

DMS : Database Migration Service

Homogenious Migration : OnPrem MYSQL --> DMS Cluster --> AWS RDS MYSQL
Heterogenious migration : OnPrem DB2 --> SCT --> DMS Cluster --> AWS RDS MYSQL

--> Similar to Mongodb , AWS have a service "Document db". 

______

ec2 instance --> OS Level --> Install anything --> We have to take care below things.
Licensing..??
UPgradations..?? 
Backup..??
HA/FT..??

RDS --> Everything managed by AWS.

--> We won't get any choice to login to OS level.

GUI tools to manage the Databases : 
--> Amazon Aurora : Mysql Workbench / pgadmin
--> MySQL	: Mysql Workbench
--> MS SQL	: ssms (Microsoft Sql Server Management Studio)
--> PostgreSQL	: pgadmin
--> MariaDB	: workbench
--> Oracle	: oracle tool, Toad


Hostname : mysqldb.cfpgnjehw330.ap-south-1.rds.amazonaws.com
admin
qHv5eXIs5c2t07HqiGIN



Enable Public Access : Yes .. DB can be accesable over the internet, We can install tools in local device and connect. 
NO : The DB instance will be available to the resources running in same VPC.


--> DB ENgine 
--> Define Username and password (admin & custom/autogenerated)
--> Storage option
--> VPC (Default)

Version : -2 / -1 mechanism.. We don't go with latest version. 
Free Tier : Choose this
Credentials : Define Username and password (admin & custom/autogenerated)
DB Instance class : db.t2.micro
Storage : Min 20gb, Max: 16TB	: 20 GB (Free Tier)

Storage Autoscaling : AWS will add storage automatically when the existing size is 80%.
	--> 10% of existing storage
	--> 5 GB .. WHich ever is higher, AWS choose it.

COnnectivity : 
VPC : Default
Public Access : YES
Port : 3306

Automatic Backup : AWS creates backups automatically.  : Disable
0 --> disable
1 --> Min 
35 --> Max

--> We will get DB Endpoint to connect to db instance. We won;t get any IP address for this db instance. 


Task : Launch an Mysql RDS db instance in CUstomVPCs Public SUbnet. Install Mysql workbench and connect to the RDS db instance.  
(Launch an ec2 instance and install mysql workbench, connect to rds db..)

_________________________________________________________________________________________

D: 27/07/2021

MultiAZ Deployment : Designed for Failover/FT purpose. 

Automated Backup : This feature creates bacjup copies of our RDS instances automatically.  Based on retention period, we can have backup copies in our aws env to restore. 
Disable : 0 
Min : 1 Day
Max : 35 Days

--> When we are launching db instance, it creates a backup copy automatically, if this feature is enabled. 

7 Days : AWS keeps last 7 days backup copies. 


Enhanced Monitoring : 1 Sec
Basic Monitoring : 5 Min

____

We have "Read Replica" option for scaling purpose. It works with "Master-Slave" mechanism.

_______________________________________________________________________________________

D: 28/07/2021

Manual Snapshots : We can create snapshots manually. These won't delete along with rds db instance.  We need to delete manually.

Automated/system snapshots : AWS creates these, We cannot delete these.


RDS won't work on In-Place restoration. Restoration happens as a new rds db instance with new endpoint.

percona xtra backup

Restore to point in time : You are creating a new DB instance from a source DB instance at a specified time.

___

Dynamodb : nosql database : Serverless architecture. : single-digit millisecond latency at any scale. 

Now you can select, insert, update, and delete data in DynamoDB. using ad hoc PartiQL queries.

https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html

{
name : Avinash,
COntact : 1111,
address : 
	{	
	street : 1,
	ares : k
	},
}


Task : launch an rds mysql db instance-1.. Now export/restore the shared db... 

Launch another rds mysql db instance-2.. Migrate all the datbases and tables from Db instance-1 to db instance-2 Using DMS (Database Migration service).

1. Launch a DMS cluster
2. Create endpoints (Source and destination) and test the endpoints
3. Create a replciation job and verify.

https://www.youtube.com/watch?v=iRhJDGp-ew8
_______________________________________________________________________________________

D: 29/07/2021

Cloudtrail : Logging service. Enabled by default. it stores only last 90 days logs. Create a trail to s3 to store all logs for unlimited days. 

• Management events provide information about management operations that are
performed on resources in your AWS account. These are also known as control plane
operations.

• Data events provide information about the resource operations performed on or in a
resource. These are also known as data plane operations. Data events are often high-volume activities. Data events can log s3, Dynamodb and Lambda services.

• Insight Events : CloudTrail Insights events capture unusual activity in your AWS account. If you have Insights events enabled, and CloudTrail detects unusual activities.

--> Cloudwatch Agent : We can install cw agent at os level, we can get custom logs of OS. 

__________________________________

Config : (Config works with Cloudtrail) : 

AWS Trusted Advisor : Based on our support plan aws provide suggestions to fix 
--> Cost Optimization : under utilised resources
--> Performance : Over utilized resources
--> Security
--> Fault Tolerance
--> Service Limits

___

ACM : Amazon Certificate Manager : Generate SSL/TLS certificates. 


Task : Launch an ec2 instance in Mumbai region.. Migrate this ec2 instance from mumbai region to N Virginia region using "CloudEndure Migration".

https://console.cloudendure.com/#/register/register

GCP to AWS : https://www.youtube.com/watch?v=8xf1RpPdcHs
VMWARE : https://www.youtube.com/watch?v=Vx9lRRY-shg


Task 2 : Generate SSL cert and configure http to https redirection.
https://raw.githubusercontent.com/avizway/redirection/master/httptohttps

_______________________________________________________________________________________

D: 30/07/2021

AWS Inspector : Inspector agent will perform the selected assesments to find common issues, network rechability and CIS benchmarks. 

____

Protect our resources from DDoS attack : AWS Shield Advanced ($3000/Month)  + ASG + CloudFront
____

WAF : Web Application Firewall : Application ELB, CLoudfront, API Gateway.. 

____

Cloudfront : AWS CDN Service : Content Delivery Network : 

Origin : S3.. ELB.. Media Service.. 

OAI : origin Access identity : 

TTL : 86400 Sec

How to clear the cache from all the edge locations..!! 
Ans : perform invalidation.

______________________________________________________________________________________

D: 31/07/2021

Lambda : Serverless architecture : Underlying infra managed by aws.
--> Configuration (128 mb memory) 
--> How many reqests
--> Code run time (in Minutes)

python
go
node.js
.net core
ruby
java

Canary function : Open the website and look for the given string.

How to trigger lambda function periodically.? 
Ans : Amazon EventBridge / CLoudwatch events (Previously).. rate format and cron format..

Increase the lfunction configurtions.? 
Memory --> 128 mB, 10 GB..

Add additional permissions to the lambda function.
Navigate the ROle associate to the lambda, add required permissions. 

Where we get all the logs / previous executed results.
CLoudwatch logs.. Loggroups.. 

Can we run lambda with in VPC.? If yes, how..??
Lambda's Role must have "AWSLambdaVPCAccessExecutionRole" permissions.


Python : https://www.youtube.com/watch?v=YYXdXT2l-Gg&list=PL-osiE80TeTt2d9bfVyTiXJA-UTHn6WwU
https://www.youtube.com/watch?v=rfscVS0vtbw

AWS Python DOcumentation : https://boto3.amazonaws.com/v1/documentation/api/latest/guide/quickstart.html

_______

Task : Try the lambda functions i have shared.

_____________________________________________________________________________

Cloudformation : IaC (Infrastructure as Code) : 
--> Free.. But for the resources it creates. 
--> Supports JSON & YAML

https://egghead.io/courses/learn-aws-lambda-from-scratch-d29d
https://www.w3schools.com/js/js_json_intro.asp

https://www.youtube.com/watch?v=yDp6pGwasMo&list=PLneBjIzDLECmpOYF5y51fOsBRqPkuX3NH

_______________________________________________________________________________________


cloud9 : IDE within AWS environment.

AWS CDK : 
node --version

npm install -g aws-cdk

cdk --version

cdk init 		--> TO initialise a project in CDK
cdk init sample-app --language typescript
npm run watch
cdk synth
cdk bootstrap

 * `npm run build`   compile typescript to js
 * `npm run watch`   watch for changes and compile
 * `npm run test`    perform the jest unit tests
 * `cdk deploy`      deploy this stack to your default AWS account/region
 * `cdk diff`        compare deployed stack with current state
 * `cdk synth`       emits the synthesized CloudFormation template

AWS Console recorder : Chrome extension

cdkworkshop.com
______________________________________________________________________________________

Directory Service : 
--> Directory services with in AWS envronment : AWS Managed Microsoft AD
--> We can extend existing AD environment to AWS with "AD Connector".

Directory Service : https://www.youtube.com/watch?v=RDlBoAHVmZs
AD COnnector : https://www.youtube.com/watch?v=Ca259gg6SoM

Join Linux Instance to domain : https://www.youtube.com/watch?v=LWi9-XL2vWQ

______________________________________________________________________________________











ECS : Elastic Container Service : AWS Own service 
ECR : Elastic container registery : repository to store images
EKS : Elastic Kubernates Service : 


ECS : 
--> EC2 : We will get an ec2 instance, docker runs with in instance.. App perf/resource utilisation depends on ec2 configurtion.
--> Fargate : ECS manages everything, Based on load it scales.

Task Defination : Contqains information about what image, what configuration, network.. 

Login
docker build -t avinashnginx .
docker tag avinashnginx:latest 
docker push


AWS Pricing Calculator: 

https://calculator.s3.amazonaws.com/index.html
https://calculator.aws/#/


__________________________________________________________________

AWS Organisations : Manage multiple AWS accounts.. 
--> SCP : Service control policy 

root / master --> Enable Org

AWS SSO : Place to manage login (users/groups) to multiple Accounts added into AWS rganisation.

--> Permission set : 


CICD : 

aws codepipeline :   source code --> build --> deploy













































